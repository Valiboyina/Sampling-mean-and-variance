<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Interactive Sampling Distribution</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        .container {
            max-width: 900px;
            margin: auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }
        h1, h2 {
            text-align: center;
        }
        .input-group {
            margin-bottom: 15px;
        }
        .input-group label {
            margin-right: 10px;
            display: inline-block;
            width: 250px;
        }
        .input-group input {
            padding: 5px;
        }
        .chart-container {
            margin: 30px 0;
        }
        .statistics {
            margin-top: 20px;
            font-size: 1.1em;
            line-height: 1.5;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Sampling Distribution Simulator</h1>
        <div class="input-group">
            <label for="numSamples">Number of Samples (m):</label>
            <input type="number" id="numSamples" value="1000" min="10">
        </div>
        <div class="input-group">
            <label for="sampleSize">Sample Size (n):</label>
            <input type="number" id="sampleSize" value="30" min="1">
        </div>
        <div class="input-group">
            <label for="numTrials">Number of Trials (Binomial):</label>
            <input type="number" id="numTrials" value="10" min="1">
        </div>
        <div class="input-group">
            <label for="probSuccess">Probability of Success (p):</label>
            <input type="number" id="probSuccess" step="0.01" value="0.5" min="0" max="1">
        </div>
        <button onclick="generateDistribution()">Generate Distribution</button>

        <div class="chart-container">
            <h2>Sample Mean Distribution</h2>
            <canvas id="meanChart"></canvas>
        </div>
        <div class="chart-container">
            <h2>Sample Variance Distribution</h2>
            <canvas id="varianceChart"></canvas>
        </div>

        <div class="statistics" id="statistics">
            <!-- Mean and Variance statistics will appear here -->
        </div>
    </div>

    <script>
        let meanChart, varianceChart;

        // Function to generate samples and calculate means and variances
        function generateSamples(m, n, trials, p) {
            const sampleMeans = [];
            const sampleVariances = [];
            for (let i = 0; i < m; i++) {
                const sample = Array.from({ length: n }, () => {
                    return Array.from({ length: trials }, () => Math.random() < p ? 1 : 0)
                        .reduce((sum, x) => sum + x, 0);
                });

                const mean = sample.reduce((sum, x) => sum + x, 0) / n;
                const variance = sample.reduce((sum, x) => sum + Math.pow(x - mean, 2), 0) / (n - 1);
                sampleMeans.push(mean);
                sampleVariances.push(variance);
            }
            return { sampleMeans, sampleVariances };
        }

        // Function to initialize or update a chart
        function createOrUpdateChart(chart, ctx, data, label, color) {
            if (chart) {
                chart.data.datasets[0].data = data;
                chart.data.labels = Array.from({ length: data.length }, (_, i) => i + 1);
                chart.update();
            } else {
                return new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: Array.from({ length: data.length }, (_, i) => i + 1),
                        datasets: [{
                            label: label,
                            data: data,
                            backgroundColor: color,
                            borderWidth: 1,
                            borderColor: "darkred",
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: { display: false },
                            tooltip: {
                                callbacks: {
                                    label: function(tooltipItem) {
                                        return `${tooltipItem.dataset.label}: ${tooltipItem.raw.toFixed(2)}`;
                                    }
                                }
                            }
                        },
                        scales: {
                            x: { display: false },
                            y: { 
                                title: { display: true, text: label },
                                ticks: { callback: function(value) { return value.toFixed(2); } }
                            }
                        }
                    }
                });
            }
        }

        // Calculate mean and variance
        function calculateMean(data) {
            return data.reduce((sum, value) => sum + value, 0) / data.length;
        }

        function calculateVariance(data, mean) {
            return data.reduce((sum, value) => sum + Math.pow(value - mean, 2), 0) / (data.length - 1);
        }

        // Main function to generate and display distributions
        function generateDistribution() {
            const m = parseInt(document.getElementById("numSamples").value);
            const n = parseInt(document.getElementById("sampleSize").value);
            const trials = parseInt(document.getElementById("numTrials").value);
            const p = parseFloat(document.getElementById("probSuccess").value);

            const { sampleMeans, sampleVariances } = generateSamples(m, n, trials, p);

            // Calculate the mean and variance of the sample means
            const meanOfMeans = calculateMean(sampleMeans);
            const varianceOfMeans = calculateVariance(sampleMeans, meanOfMeans);

            // Calculate the mean and variance of the sample variances
            const meanOfVariances = calculateMean(sampleVariances);
            const varianceOfVariances = calculateVariance(sampleVariances, meanOfVariances);

            // Update charts
            const meanCtx = document.getElementById("meanChart").getContext("2d");
            meanChart = createOrUpdateChart(meanChart, meanCtx, sampleMeans, "Sample Mean", "rgba(255, 0, 0, 0.5)");

            const varianceCtx = document.getElementById("varianceChart").getContext("2d");
            varianceChart = createOrUpdateChart(varianceChart, varianceCtx, sampleVariances, "Sample Variance", "rgba(255, 0, 0, 0.5)");

            // Display statistics and comparison with theoretical values
            const theoreticalMean = p * trials;
            const theoreticalVariance = p * (1 - p) * trials;

            document.getElementById("statistics").innerHTML = `
                <h3>Calculated Statistics:</h3>
                <p><strong>Mean of Sample Means:</strong> ${meanOfMeans.toFixed(2)}</p>
                <p><strong>Variance of Sample Means:</strong> ${varianceOfMeans.toFixed(2)}</p>
                <p><strong>Mean of Sample Variances:</strong> ${meanOfVariances.toFixed(2)}</p>
                <p><strong>Variance of Sample Variances:</strong> ${varianceOfVariances.toFixed(2)}</p>
                <h3>Theoretical Statistics (Binomial Distribution):</h3>
                <p><strong>Theoretical Mean:</strong> ${theoreticalMean}</p>
                <p><strong>Theoretical Variance:</strong> ${theoreticalVariance}</p>
                <h3>Discussion:</h3>
                <p>The mean of the sample means should approach the theoretical mean of the parent distribution as the number of samples increases. Similarly, the variance of the sample means should decrease as the sample size increases, reflecting the Central Limit Theorem. In this case, the theoretical mean is ${theoreticalMean} and the theoretical variance is ${theoreticalVariance}. As the sample size increases, the sample mean distribution becomes more concentrated around the theoretical mean.</p>
            `;
        }
    </script>
</body>
</html>
